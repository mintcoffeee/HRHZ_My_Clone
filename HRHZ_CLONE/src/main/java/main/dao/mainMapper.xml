<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mainSQL">

    <select id="getBestProductList"  resultType="java.util.HashMap">
       SELECT 
			*
  		FROM (SELECT 
		       		p.code AS "productCode"
		       	,	p.name AS "productName"
		        ,   P.brand_code as "brandCode"
		        ,   (P.brand_code || '/' ||  pi.img_origin_name)as "imgPath"
		       	,	(SELECT name FROM brand WHERE  code = p.brand_code) as "brandName" 
		       	, 	TO_CHAR(p.price, 'FM999,999,999,999') AS "price"
		       	,	p.like_count AS "likeCount"
		       	,	p.color AS "color"
		        ,   ROW_NUMBER() OVER(PARTITION BY p.code ORDER BY PI.SEQ DESC) AS "RN"
				FROM   product p
		       	INNER JOIN (SELECT  a.product_code
		                           ,  a.img_origin_name
		                          , MIN(a.seq) AS SEQ
		                   	FROM   product_image a
		                   	WHERE  a.thumbanil_yn = 'Y'
		                   	GROUP  BY a.product_code, a.img_origin_name
		                    ) pi
		        ON p.code = pi.product_code
				WHERE  
					1 = 1
		       	ORDER  BY p.like_count DESC
		       ) k
		WHERE 
            1=1
        AND RN = 1
        AND ROWNUM  <![CDATA[<]]>  4
    </select>
    
    <select id="getTop100Product"  resultType="java.util.HashMap">
       SELECT 
			*
  		FROM (SELECT 
		       		p.code AS "productCode"
		       	,	p.name AS "productName"
		        ,   P.brand_code as "brandCode"
		        ,   (P.brand_code || '/' ||  pi.img_origin_name)as "imgPath"
		        ,   pi.img_origin_name as "imgOriginName"
		       	,	(SELECT name FROM brand WHERE  code = p.brand_code) as "brandName"
		       	, 	TO_CHAR(p.price, 'FM999,999,999,999') AS "price" 
		       	,	p.like_count AS "likeCount"
		       	,	p.color AS "color"
		        ,   ROW_NUMBER() OVER(PARTITION BY p.code ORDER BY PI.SEQ DESC) AS "RN"
				FROM   product p
		       	INNER JOIN (SELECT  a.product_code
		                           ,  a.img_origin_name
		                          , MIN(a.seq) AS SEQ
		                   	FROM   product_image a
		                   	WHERE  a.thumbanil_yn = 'Y'
		                   	GROUP  BY a.product_code, a.img_origin_name
		                    ) pi
		        ON p.code = pi.product_code
				WHERE  
					1 = 1
		       	ORDER  BY p.like_count
		       ) k
		WHERE 
            1=1
        AND RN = 1
        AND ROWNUM  <![CDATA[<]]>  10
    </select>
    
    <insert id="likeInsert" parameterType="java.util.HashMap">
    	INSERT INTO like_list
    	VALUES (#{id} 
    	<choose>
			<when test ='codeType != null and codeType == "B"'>
				, #{code}
			</when>
			<otherwise>
				, null
			</otherwise>
		</choose>
		<choose>
			<when test ='codeType != null and codeType == "P"'>
				, #{code}
			</when>
			<otherwise>
				, null
			</otherwise>
		</choose>
			, #{codeType}
    		, sysdate
    	) 
    </insert>
    
     <delete id="likeDelete" parameterType="java.util.Map">
    	DELETE FROM like_list
    	WHERE 1=1
    	<if test='codeType != null and codeType == "B"'>
            AND brand_code = #{code}
        </if>
        <if test='codeType != null and codeType == "P"'>
            AND product_code= #{code}
        </if>
        	AND id = #{id}
    	
    </delete>
    
    <update id="likeCount" parameterType="java.util.Map">
    	UPDATE 
    	<if test='codeType != null and codeType == "B"'>
        	BRAND
        </if>
        <if test='codeType != null and codeType == "P"'>
            PRODUCT
        </if>
        SET
        	<if test='division != null and division == "I"'>
            	like_count = like_count + 1
        	</if>
        	<if test='division != null and division == "D"'>
        		like_count = like_count - 1
        	</if>
        WHERE 1=1
        <if test='codeType != null and codeType == "B"'>
            AND code = #{code}
        </if>
        <if test='codeType != null and codeType == "P"'>
            AND code= #{code}
        </if> 
    </update>

</mapper>
